/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-03-20 06:18:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.SQLException;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<title>상세 보기 페이지</title>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<script language = \"javascript\">\r\n");
      out.write("\t\tfunction moveTodeletePage(content_id) {\r\n");
      out.write("\t\t\tconsole.log(\"삭제 페이지로 이동\" + content_id);\r\n");
      out.write("\t\t\tlocation.href=\"delete.jsp?content_id=\"+content_id;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction moveToEditPage(content_id){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(\"ㅇㅇㅇㅇㅇㅇㅇ\");\r\n");
      out.write("\t\t\tconsole.log(\"ㅇㅇㅇㅇㅇㅇㅇ\");\r\n");
      out.write("\t\t\tconsole.log(\"ㅇㅇㅇㅇㅇㅇㅇ\");\r\n");
      out.write("\t\t\tconsole.log(\"ㅇㅇㅇㅇㅇㅇㅇ\");\r\n");
      out.write("\t\t\tconsole.log(\"ㅇㅇㅇㅇㅇㅇㅇ\");\r\n");
      out.write("\t\t\tconsole.log(\"ㅇㅇㅇㅇㅇㅇㅇ\");\r\n");
      out.write("\t\t\tconsole.log(\"view.jsp - \" + content_id+ \"의 수정 페이지로 이동\");\r\n");
      out.write("\t\t\tlocation.href=\"modify.jsp?content_id=\"+content_id;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t \r\n");
      out.write("\t<!-- 수정 페이지 이동 -->\r\n");
      out.write("\t\r\n");
      out.write("\t");

		//list.jsp에서 넘어온 값
		String content_idx_from_view = request.getParameter("content_idx");
		
	 	System.out.println("게시물 idx = "+ content_idx_from_view);
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		//쿼리 결과를 저장한 메모리 영역을 참조할 객체

		int content_id;
		content_id = Integer.parseInt(content_idx_from_view);
		System.out.println("클릭한 컨텐츠 번호 = " + content_id);
		
		try{
			//1. JDBC 드라이버 로딩 	
			String driverName = "com.mysql.cj.jdbc.Driver";
			Class.forName(driverName);
		
			//2. DB 서버 접속
			String dbUrl = "jdbc:mysql://localhost:3306/boardDB?serverTimezone=UTC";
			String dbUser = "root";
			String dbPassword = "ROOT";
					
			//접속 URL정보와 포트 번호, SID		
			conn = DriverManager.getConnection(dbUrl, dbUser, dbPassword);
			//위에서 만든 클래스를 import하여 Connection 객체를 생성한다.
			 
			stmt = conn.createStatement();
			//데이터 추가, 수정, 삭제를 실행할 객체를 생성 
			// 글번호(content_idx) 파라미터를 list.jsp에서 받아 옴 

			String sql = "SELECT * FROM board_table WHERE content_id = " + content_id;
			rs = stmt.executeQuery(sql);
			
			while(rs.next()){ //해당 게시물 가져 오기
				int i=1;	
				String title = rs.getString(i++);
				String content = rs.getString(i++);
				String regDate = rs.getString(i++);
				String modDate = rs.getString(i++);
				
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t<th>내용</th>\r\n");
      out.write("\t\t\t\t\t<th>저장날짜</th>\r\n");
      out.write("\t\t\t\t\t<th>수정날짜</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\"> ");
      out.print(title );
      out.write(" </td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\"> ");
      out.print(content );
      out.write(" </td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\"> ");
      out.print(regDate.toString() );
      out.write(" </td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\"> ");
      out.print(modDate.toString() );
      out.write(" </td>\t\t\t\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<button type=\"button\" value=\"삭제\" onclick=\"javascript:moveTodeletePage(");
      out.print(content_id);
      out.write(");\">\r\n");
      out.write("\t\t\t\t게시물 삭제\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t<button type=\"button\" onclick=\"javascript:moveToEditPage(");
      out.print(content_id);
      out.write(");\">\r\n");
      out.write("\t\t\t\t게시물 수정하기\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t");

			}
			if( rs!= null){
				try {
					rs.close();
				} catch(SQLException e){					
				}
			}
			if(stmt != null){
				try {
					stmt.close();
				} catch(SQLException e){					
				}
			}
			if(conn != null){
				try {
					conn.close();
				} catch(SQLException e){					
				}
			}
		} catch(ClassNotFoundException ec){
			ec.printStackTrace();
		}
		catch( SQLException e){ 
			e.printStackTrace();
		}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
