/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-03-20 02:27:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Timestamp;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>JSP 게시판</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>게시판</h1>\r\n");
      out.write("\t<table border=\"1px\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>제목</th> \r\n");
      out.write("\t\t\t<th>저장날짜</th>\r\n");
      out.write("\t\t\t<th>수정날짜</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			Connection conn = null;
			Statement stmt = null;
			ResultSet rs = null;
			//쿼리 결과를 저장한 메모리 영역을 참조할 객체
	
			int content_id = 1;
			
			try{
				//1. JDBC 드라이버 로딩 	
				String driverName = "com.mysql.cj.jdbc.Driver";
				Class.forName(driverName);
			
				//2. DB 서버 접속
				String dbUrl = "jdbc:mysql://localhost:3306/boardDB?serverTimezone=UTC";
				String dbUser = "root";
				String dbPassword = "ROOT";
						
				//접속 URL정보와 포트 번호, SID		
				conn = DriverManager.getConnection(dbUrl, dbUser, dbPassword);
				//위에서 만든 클래스를 import하여 Connection 객체를 생성한다.
				 
				stmt = conn.createStatement();
				//데이터 추가, 수정, 삭제를 실행할 객체를 생성
				
				String sql = "SELECT * FROM board_table";		
				rs = stmt.executeQuery(sql);
				int idx=1; // idx : 게시글의 번호(PK)임.
				
				while(rs.next()){ //다음 값이 있을 때까지
					int i=1;	
					String title = rs.getString(i++);
					String content = rs.getString(i++);
					String regDate = rs.getString(i++);
					String modDate = rs.getString(i++);
					
					//System.out.println(title+ " " + content + " " + regDate + " " + modDate);
					//이걸 화면에 뿌리는 걸로 변경 

					out.print("<tr>");
					out.print("<td> <a href='view.jsp?content_idx="+ idx +" '> " + title + "</td>");
			//		out.print("<td> " + content + "</td>");
					out.print("<td> " + regDate.toString() + "</td>");
					out.print("<td>" + modDate.toString() + "</td>");
					out.print("</tr>");
					idx++;
			} //end of while
			if( rs!= null){
				try {
					rs.close();
				} catch(SQLException e){					
				}
			}
			if(stmt != null){
				try {
					stmt.close();
				} catch(SQLException e){					
				}
			}
			if(conn != null){
				try {
					conn.close();
				} catch(SQLException e){					
				}
			}
		} catch(ClassNotFoundException ec){
			ec.printStackTrace();
		}
		catch( SQLException e){
			e.printStackTrace();
		}
	
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<a href=\"write.jsp\"> [ 새로운 게시물 등록 ]</a>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
