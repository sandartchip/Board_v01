/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-03-20 06:53:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.SQLException;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<title>글 수정 페이지</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");

	//view.jsp에서 content id 값 받는다.
	//DB 커넥션 해서 content_id 를 PK로  게시글 제목/내용 받아오는 부분.	
	

      out.write("\r\n");
      out.write("\r\n");

	
	String content_id =  request.getParameter("content_id");
	System.out.println(content_id+"번째 게시물을 수정합니다");

	Connection conn = null;
	Statement stmt = null;
	ResultSet rs = null;
	String title="", content="", regDate, modDate;
 
	//쿼리 결과를 저장한 메모리 영역을 참조할 객체
	
	System.out.println("클릭한 컨텐츠 번호 = " + content_id);
	
	try{
		//1. JDBC 드라이버 로딩 	
		String driverName = "com.mysql.cj.jdbc.Driver";
		Class.forName(driverName);
	
		//2. DB 서버 접속
		String dbUrl = "jdbc:mysql://localhost:3306/boardDB?serverTimezone=UTC";
		String dbUser = "root";
		String dbPassword = "ROOT";
				
		//접속 URL정보와 포트 번호, SID		
		conn = DriverManager.getConnection(dbUrl, dbUser, dbPassword);
		//위에서 만든 클래스를 import하여 Connection 객체를 생성한다.
		 
		stmt = conn.createStatement();
		//데이터 추가, 수정, 삭제를 실행할 객체를 생성 
		// 글번호(content_idx) 파라미터를 list.jsp에서 받아 옴 
	
		String sql = "SELECT * FROM board_table WHERE content_id = " + content_id;
		rs = stmt.executeQuery(sql);
		
		while(rs.next()){ //해당 게시물 가져 오기
			int i=1;	
			title = rs.getString(i++);
			content = rs.getString(i++);
			regDate = rs.getString(i++);
			modDate = rs.getString(i++);				
		}
		System.out.println("--제목--"+title+" 내용--"+content+"----");
		
		if( rs!= null){
			try {
				rs.close();
			} catch(SQLException e){					
			}
		}
		if(stmt != null){
			try {
				stmt.close();
			} catch(SQLException e){					
			}
		}
		if(conn != null){
			try {
				conn.close();
			} catch(SQLException e){					
			}
		}
	} catch(ClassNotFoundException ec){
		ec.printStackTrace();
	}
	catch( SQLException e){ 
		e.printStackTrace();
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<form action=\"modifySave.jsp\" method=\"post\"\r\n");
      out.write("\tonsubmit=\"return formCheck();\">\t\r\n");
      out.write("\t\t<!--  데이터들을 가진 form을 action에 지정된 페이지로 보냄 -->\r\n");
      out.write("\t\t<!--  post는 많은 값 보낼 때. -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t제목 : <input type=\"text\" name=\"title\" value=\"");
      out.print(title );
      out.write("\">\r\n");
      out.write("\t\t<!-- 제목 표시-->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t내용 : <input type=\"text\" name=\"content\" style=\"height:100px\"  value=\"");
      out.print(content );
      out.write("\">\t\t\r\n");
      out.write("\t\t<!-- 내용 표시-->\r\n");
      out.write("\t\t게시물 번호 : \r\n");
      out.write("\t\t<input type=\"hidden\" name=\"content_id\" value=\"");
      out.print(content_id );
      out.write("\">\r\n");
      out.write("\t\t<input type=\"submit\" value = \"저장\"/>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t //modifySave로 content_id를 넘긴다.\r\n");
      out.write("\t\t \r\n");
      out.write("\t</form>\r\n");
      out.write("\t<a href=\"view.jsp\"> 취소 </a> <!-- 상세보기로 이동 -->\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction formCheck(){\r\n");
      out.write(" \r\n");
      out.write("\t\t\t//첫번째 form의 제목의 값\r\n");
      out.write("\t\t\tvar title = document.forms[0].title.value;\r\n");
      out.write("\t\t\tvar content = document.forms[0].content.value;\r\n");
      out.write("\t\t\tif(title.length == 0)\r\n");
      out.write("\t\t\t\talert(\"제목 없음\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(content.length == 0 )\r\n");
      out.write("\t\t\t\talert(\"내용 없음\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif( title.length >80) \r\n");
      out.write("\t\t\t\talert(\"제목의 길이가 너무 깁니다\");\r\n");
      out.write("\t\t\tconsole.log(\"제목: \" + title + \"내용  : \" + content);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif( ( title.length >80)|| (content.length == 0 ) || (title.length == 0))\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t} \r\n");
      out.write("\t</script> \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
